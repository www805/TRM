<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.avst</groupId>
    <artifactId>trm</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>TRM</name>
    <packaging>jar</packaging>
    <description>Trial Record System</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-integration</artifactId>
        </dependency>

      <!--  <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--eureka server -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>

        <!--添加feign依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <!--热加载-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>springloaded</artifactId>
            <version>1.2.6.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>2.0.2.RELEASE</version>
        </dependency>

        <!--关于mybatis plus 数据库连接-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
            <version>5.1.34</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>2.2.0</version>
        </dependency>
        <!-- freemarker -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
        </dependency>
        <!-- fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.15</version>
        </dependency>


        <!-- thymeleaf模板引擎引入-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
            <!--<version>3.11-beta2</version>-->
            <version>3.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <!--<version>3.11-beta2</version>-->
            <version>3.14</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml-schemas</artifactId>
            <!--<version>3.11-beta2</version>-->
            <version>3.14</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-excelant</artifactId>
            <version>3.11-beta2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.23</version>
        </dependency>


        <!--功能性的添加jar包-->
        <dependency>
            <groupId>com.ndktools</groupId>
            <artifactId>javamd5</artifactId>
            <version>1.7.1</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.9</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons.io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>


        <dependency>
            <groupId>org.openanzo.dependencies</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>org.openanzo.dependencies</groupId>
            <artifactId>org.apache.commons.httpclient</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>com.wb</groupId>
            <artifactId>decode</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>com.wb</groupId>
            <artifactId>encode</artifactId>
            <version>1.0</version>
        </dependency>



        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-jexl3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-jexl3</artifactId>
            <version>3.1</version>
        </dependency>


        <!-- shiro start -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>com.github.theborakompanioni</groupId>
            <artifactId>thymeleaf-extras-shiro</artifactId>
            <version>2.0.0</version>
        </dependency>
        <!-- shiro end -->


        <!--添加feign依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <dependency>
            <groupId>io.github.openfeign.form</groupId>
            <artifactId>feign-form</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign.form</groupId>
            <artifactId>feign-form-spring</artifactId>
            <version>2.1.0</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.corundumstudio.socketio/netty-socketio -->
        <dependency>
            <groupId>com.corundumstudio.socketio</groupId>
            <artifactId>netty-socketio</artifactId>
            <version>1.7.12</version>
        </dependency>

        <dependency>
            <groupId>com.wb</groupId>
            <artifactId>word2pdf</artifactId>
            <version>1.0</version>
            <classifier>license</classifier>
        </dependency>


        <dependency>
            <groupId>com.wb</groupId>
            <artifactId>word2pdf</artifactId>
            <version>1.0</version>
            <classifier>jdk16</classifier>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.23</version>
        </dependency>

        <dependency>
            <groupId>fr.opensagres.xdocreport</groupId>
            <artifactId>fr.opensagres.xdocreport.document</artifactId>
            <version>2.0.2</version>
        </dependency>
        <dependency>
            <groupId>fr.opensagres.xdocreport</groupId>
            <artifactId>org.apache.poi.xwpf.converter.xhtml</artifactId>
            <version>1.0.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/fr.opensagres.xdocreport/org.apache.poi.xwpf.converter.pdf -->
        <dependency>
            <groupId>fr.opensagres.xdocreport</groupId>
            <artifactId>org.apache.poi.xwpf.converter.pdf</artifactId>
            <version>1.0.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.xhtmlrenderer/flying-saucer-pdf -->
        <dependency>
            <groupId>org.xhtmlrenderer</groupId>
            <artifactId>flying-saucer-pdf</artifactId>
            <version>9.1.9</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.wso2.orbit.org.apache.commons/commons-compress -->
        <dependency>
            <groupId>org.wso2.orbit.org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.9.0.wso2v1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.3</version>
        </dependency>


        <!--分词-->
     <!-- <dependency>
            <groupId>org.ansj</groupId>
            <artifactId>ansj_seg</artifactId>
            <version>5.1.3</version>
        </dependency>-->



    </dependencies>

    <!--springcloud 导入-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <useUniqueVersions>false</useUniqueVersions>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.avst.trm.TrmApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.4.2</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!--<plugin>&lt;!&ndash;&lt;!&ndash;用混淆插件混淆代码&ndash;&gt;-->
                <!--<groupId>com.github.wvengen</groupId>-->
                <!--<artifactId>proguard-maven-plugin</artifactId>-->
                <!--<version>2.1.0</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--&lt;!&ndash; 混淆时刻，这里是打包的时候混淆&ndash;&gt;-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--&lt;!&ndash; 使用插件的什么功能，当然是混淆&ndash;&gt;-->
                            <!--<goal>proguard</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash; 是否将生成的PG文件安装部署&ndash;&gt;-->
                    <!--<attach>true</attach>-->
                    <!--&lt;!&ndash; 是否混淆&ndash;&gt;-->
                    <!--<obfuscate>true</obfuscate>-->
                    <!--&lt;!&ndash; 指定生成文件分类 &ndash;&gt;-->
                    <!--<attachArtifactClassifier>pg</attachArtifactClassifier>-->
                    <!--<options>-->
                        <!--&lt;!&ndash; JDK目标版本1.8&ndash;&gt;-->
                        <!--<option>-target 1.8</option>-->
                        <!--&lt;!&ndash; 不做收缩（删除注释、未被引用代码）&ndash;&gt;-->
                        <!--<option>-dontshrink</option>-->
                        <!--&lt;!&ndash; 不做优化（变更代码实现逻辑）&ndash;&gt;-->
                        <!--<option>-dontoptimize</option>-->
                        <!--&lt;!&ndash; 不路过非公用类文件及成员&ndash;&gt;-->
                        <!--<option>-dontskipnonpubliclibraryclasses</option>-->
                        <!--<option>-dontskipnonpubliclibraryclassmembers</option>-->
                        <!--&lt;!&ndash; 优化时允许访问并修改有修饰符的类和类的成员 &ndash;&gt;-->
                        <!--<option>-allowaccessmodification</option>-->
                        <!--&lt;!&ndash; 确定统一的混淆类的成员名称来增加混淆,防止冲突&ndash;&gt;-->
                        <!--<option>-useuniqueclassmembernames</option>-->
                        <!--<option>-adaptclassstrings</option>-->

                        <!--<option>-dontusemixedcaseclassnames</option>-->

                        <!--&lt;!&ndash; 不混淆所有包名，Spring配置中有大量固定写法的包名&ndash;&gt;-->
                        <!--<option>-keeppackagenames</option>-->
                        <!--&lt;!&ndash; 不混淆所有特殊的类&ndash;&gt;-->
                        <!--<option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>-->
                        <!--&lt;!&ndash; 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-keepclassmembers public class * {void set*(***);*** get*();}</option>&ndash;&gt;-->

                        <!--<option>-keep class * extends java.lang.annotation.Annotation {*;}</option>-->

                        <!--<option>-keepnames interface **</option>-->
                        <!--<option>-keep interface * extends * { *; }</option>-->


                        <!--&lt;!&ndash; 不混淆的类的属性及方法，实体包  &ndash;&gt;-->
                        <!--<option>-keep class com.avst.trm.TrmApplication</option>-->
                        <!--<option>-keep class com.avst.trm.TrmApplication{ *; }</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.conf.socketio.NettySocketConfig {*; }</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.conf.shiro.ShiroConfig {*; }</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.conf.socketio.NettySocketConfig</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.conf.shiro.ShiroConfig</option>-->

                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.police.entity.**</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.police.entity.**{*;}</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.police.mapper.**</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.police.mapper.**{*;}</option>-->

                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.base.entity.**</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.base.entity.**{*;}</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.base.mapper.**</option>-->
                        <!--<option>-keep class com.avst.trm.v1.common.datasourse.base.mapper.**{*;}</option>-->


                        <!--&lt;!&ndash;忽略警告&ndash;&gt;-->
                        <!--<option>-ignorewarnings</option>-->

                    <!--</options>-->
                    <!--<outjar>${project.build.finalName}-pg.jar</outjar>-->
                    <!--&lt;!&ndash; 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 &ndash;&gt;-->
                    <!--<libs>-->
                        <!--<lib>${java.home}/lib/rt.jar</lib>-->
                        <!--<lib>${java.home}/lib/jce.jar</lib>-->
                    <!--</libs>-->
                    <!--&lt;!&ndash; 加载文件的过滤器，就是你的工程目录了&ndash;&gt;-->
                    <!--<inFilter>com/avst/trm/**</inFilter>-->
                    <!--&lt;!&ndash; 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧&ndash;&gt;-->
                    <!--<injar>classes</injar>-->
                    <!--&lt;!&ndash; 输出目录&ndash;&gt;-->
                    <!--<outputDirectory>${project.build.directory}</outputDirectory>-->
                <!--</configuration>-->
            <!--</plugin>-->

        </plugins>

    </build>

</project>
